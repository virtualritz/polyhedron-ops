[package]
name = "polyhedron-ops"
version = "0.2.9"
authors = ["Moritz Moeller <virtualritz@gmail.com>"]
edition = "2021"
keywords = ["3d", "creative", "geometry", "graphics", "rendering"]
categories = ["graphics", "mathematics", "multimedia", "rendering"]
license = "MIT OR Apache-2.0 OR Zlib"
description = "Conway/Hart Polyhedron Operations"
readme = "README.md"
repository = "https://github.com/virtualritz/polyhedron-ops/"
documentation = "https://docs.rs/polyhedron-ops/"

[features]
default = []
# Add support for reading/writing a mesh out as a Wavefront OBJ.
obj = ["tobj"]
# Add support for parsing Conway notation strings and turning them back into polyhedra.
parser = ["pest", "pest_derive"]
nsi = ["nsi-core", "bytemuck"]
bevy = ["dep:bevy", "bevy_panorbit_camera"]
tilings = []
console = ["bevy", "parser", "bevy_console", "clap"]

[dependencies]
# Add support to convert a Polyhedron into a bevy Mesh.
bevy = { version = "0.14", default-features = false, features = [
    "bevy_pbr",
], optional = true }
bevy_console = { version = "0.12", optional = true }
bevy_panorbit_camera = { version = "0.19", optional = true }
bytemuck = { version = "1.14", features = [
    "extern_crate_alloc",
], optional = true }
clap = { version = "4.5", optional = true }
itertools = "0.13"
# Add support to render polyhedra with NSI.
nsi-core = { version = "0.8", optional = true }
num-traits = "0.2"
pest = { version = "2.7", features = ["pretty-print"], optional = true }
pest_derive = { version = "2.7", optional = true }
rayon = "1"
tobj = { version = "4", optional = true }
ultraviolet = { version = "0.9", features = ["f64"] }

[dev-dependencies]
kiss3d = { version = "0.35", features = ["vertex_index_u32"] }
bytemuck = "1.14.3"
slice-of-array = "0.3"

[target.'cfg(target_os = "linux")'.dependencies.bevy]
version = "*"
features = ["x11", "wayland"]

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 3
codegen-units = 1

[profile.release]
codegen-units = 1
lto = "thin"

[profile.wasm-release]
inherits = "release"
opt-level = "s"
strip = "debuginfo"

[[example]]
name = "playground"
required-features = ["obj"]

[[example]]
name = "bevy"
required-features = ["bevy"]

[package.metadata.docs.rs]
features = ["nsi", "obj", "parser"]

[patch.crates-io]
kiss3d = { git = "https://github.com/sebcrozet/kiss3d.git", branch = "master" }
#nsi = { git = "https://github.com/virtualritz/nsi.git", branch = "master" }
