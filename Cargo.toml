[package]
name = "polyhedron-ops"
version = "0.2.7"
authors = ["Moritz Moeller <virtualritz@gmail.com>"]
edition = "2021"
keywords = ["3d", "creative", "geometry", "graphics", "rendering"]
categories = ["graphics", "mathematics", "multimedia", "rendering"]
license = "MIT OR Apache-2.0 OR Zlib"
description = "Conway/Hart Polyhedron Operations"
readme = "README.md"
repository = "https://github.com/virtualritz/polyhedron-ops/"
documentation = "https://docs.rs/polyhedron-ops/"

[features]
default = []
# Add support for reading/writing a mesh out as a Wavefront OBJ.
obj = ["tobj"]
# Add support for parsing Conway notation strings and turning them back into polyhedra.
parser = ["pest", "pest_derive"]

[dependencies]
# Add support to convert a Polyhedron into a bevy Mesh.
bevy = { version = "0.11", default-features = false, features = ["bevy_render"], optional = true }
bytemuck = "1.13.1"
itertools = "0.10.5"
# Add support to render polyhedra with NSI.
nsi = { version = "0.7", features = ["toolbelt"], optional = true }
num-traits = "0.2.15"
pest = { version = "2.5.7", features = ["thiserror", "pretty-print"], optional = true }
pest_derive = { version = "2.5.7", optional = true }
rayon = "1.7.0"
tobj = { version = "3.2.5", optional = true }
ultraviolet = { version = "0.9.1", features = ["f64"] }

[dev-dependencies]
bevy = { version = "0.11", default-features = false, features = ["bevy_asset", "bevy_core_pipeline", "bevy_pbr", "bevy_winit"] }
dirs = "5.0.0"
kiss3d = "0.35.0"
slice_as_array = "1.1.0"
smooth-bevy-cameras = "0.8.0"

[target.'cfg(target_os = "linux")'.dev-dependencies.bevy]
features = ["x11", "wayland"]

[profile.release]
lto = "on"
opt-level = 3
codegen-units = 1

[profile.dev]
opt-level = 3

[[example]]
name = "playground"
required-features = ["obj"]

[[example]]
name = "bevy"
required-features = ["bevy"]

[package.metadata.docs.rs]
features = ["nsi", "obj", "parser"]
